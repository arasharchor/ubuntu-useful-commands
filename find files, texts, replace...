rename files with a pattern
find ~/annotation_nowai/ -depth -iname "*cv*.*" -exec sh -c 'f="{}"; mv -- "$f" "${f%cv}nowai"' \;



find ./ -type f -exec sed -i 's/string1/string2/' {} \;

find ~/cv_annotation_rnowai_test/ -iname *cv*.*;

find /home/www \( -type d -name .git -prune \) -o -type f -print0 | xargs -0 sed -i 's/subdomainA\.example\.com/subdomainB.example.com/g'



find ~/annotation_nowai/ -iname *cv*.* -type f -exec vim {} \;



grep -rnw '/root/deepzoomterowai/' -e 'microdrw'
    -r or -R is recursive,
    -n is line number, and
    -w stands for match the whole word.
    -l (lower-case L) can be added to just give the file name of matching files.

Along with these, --exclude, --include, --exclude-dir flags could be used for efficient searching:

    This will only search through those files which have .c or .h extensions:

    grep --include=\*.{c,h} -rnw '/path/to/somewhere/' -e "pattern"

    This will exclude searching all the files ending with .o extension:

    grep --exclude=\*.o -rnw '/path/to/somewhere/' -e "pattern"

    For directories it's possible to exclude one or more directories using the --exclude-dir parameter. For example, this will exclude the dirs dir1/, dir2/ and all of them matching *.dst/:

    grep --exclude-dir={dir1,dir2,*.dst} -rnw '/path/to/somewhere/' -e "pattern"
    

######################### 
find /root/deepzoomterowai/ -depth -name "*.html" -exec sh -c 'f="{}"; mv -- "$f" "${f%.html}.php"' \;
find /root/deepzoomterowai/ -depth -iname "*microdrw*" -exec sh -c 'f="{}"; mv -- "$f" "$(echo "$f" | sed s/microdrw/terowai/)"'  \;
find /root/deepzoomterowai/ -depth -iname "*microdrw*.*" -exec sh -c 'f="{}"; mv -- "$f" "$(echo "$f" | sed s/microdrw/terowai/)"'  \;
grep -rnw '/root/deepzoomterowai/' -e 'microdrw'
find ~/deepzoomterowai -type f -exec sed -i 's/deepzoo.git/deepzoom.git/g' {} +
find ~/annotation_terowai_test \( -type d -name .git -prune \) -o -type f -print0 | xargs -0 sed -i 's/Inl Corpor/Terow AI/g'


